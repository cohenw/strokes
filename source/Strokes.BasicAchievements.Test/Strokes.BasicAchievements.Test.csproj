<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>
    </ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B12BBE97-BA65-443A-9FE5-512988367D90}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Strokes.BasicAchievements.Test</RootNamespace>
    <AssemblyName>Strokes.BasicAchievements.Test</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
    <Reference Include="StructureMap">
      <HintPath>..\ExternalReferences\StructureMap.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <CodeAnalysisDependentAssemblyPaths Condition=" '$(VS100COMNTOOLS)' != '' " Include="$(VS100COMNTOOLS)..\IDE\PrivateAssemblies">
      <Visible>False</Visible>
    </CodeAnalysisDependentAssemblyPaths>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="AchievementLocaizationTest.cs" />
    <Compile Include="TestCases\Arrays\ArrayTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="AchievementTest.cs" />
    <Compile Include="ExpectUnlockAttribute.cs" />
    <Compile Include="TestCases\Arrays\ArrayLengthFieldTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Arrays\ArrayLengthVariableTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Basic\BlockCommentTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Basic\ArithmeticOperatorTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Basic\CastTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Basic\ConstKeywordFieldTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Basic\ConstKeywordVariableTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Basic\UsingStatementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Basic\TypeOfTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Basic\ShorthandArithmeticTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Basic\ProgramWithStartupParamsTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Basic\EnumExplicitDeclarationTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Basic\EnumDeclarationTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\AbstractClassTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\AnonymousObjectInitializerTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\ComparableTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\AsKeywordTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\SealedClassTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\SealedMethodTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\OverrideMethodTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\VirtualMethodTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\PrivateSetterTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\OverloadOperatorTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\ExtensionMethodTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\DestructorTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\CreateThisConstructorInitTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\CreatePropertyTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\CreateOverloadedConstructorTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\CreateInterfaceTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\CreateClassTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\CreateBaseConstructorInitTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\CreateAutoPropertyTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ErrorHandling\CatchManyExceptionsTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ErrorHandling\TryCatchFinallyStatementAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ErrorHandling\TryFinallyTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ErrorHandling\ThrownExceptionTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\EventsAndThreads\CreateDelegateAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\EventsAndThreads\EventUnsubscriptionTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\EventsAndThreads\EventSubscriptionTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\EventsAndThreads\ThreadTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ErrorHandling\TryCatchIgnoreTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ErrorHandling\ExceptionTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\IsKeywordTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\OverrideBasicsTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\ObjectInitializerTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Classes\InheritClassTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Basic\InlineCommentTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Arrays\MultiDimArrayTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Arrays\JaggedArrayTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="AchievementGuidTest.cs" />
    <Compile Include="TestCases\Expressions\QueryExpressionTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Expressions\OperatorOrTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Expressions\OperatorAndTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Expressions\NotOperatorTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Expressions\LambdaExpressionTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Expressions\IfCompoundExpressionTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\BeastNumberAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\TooManyDimensionArrayDeclarationAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\GotoAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\ThrowExceptionLongMessageAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\SpeechlessAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\InfiniteWhileLoopAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\ProceduralProgrammerAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\EveryOptionEnumAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\GutAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\ParametizerAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\EpicTaleAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\TellingAStoryAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\JobSecurityAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\CurseAlotAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Funny\EmptyMainAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Generic\CreateGenericObjectTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\Generic\CreateGenericClassTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\Console\PrintWithPlaceholdersFieldSizeAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\Console\UseConsoleReadlineAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\Console\PrintBackSlashCharAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\Console\PrintSingleQuoteCharAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\Console\PrintQuoteCharAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\Console\PrintHorizontalTabAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\Console\PrintNewLineAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\Console\HelloWorldAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\Console\FormatSpecifierAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\FundamentaldotNetMethods\ConvertToAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\FundamentaldotNetMethods\ArrayAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\FundamentaldotNetMethods\StringJoinAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\FundamentaldotNetMethods\StringEqualsAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\FundamentaldotNetMethods\StringCopyAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\FundamentaldotNetMethods\StringConcatAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\FundamentaldotNetMethods\StringCompareAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\MethodBasics\CreateMethodReturnVoidAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\MethodBasics\RefParameterAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\MethodBasics\CreateSingleLineMethodAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\MethodBasics\CreateMethodAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\MethodBasics\CreateStaticMethodAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\MethodBasics\OutParameterAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\MethodCalls\MethodBasics\ParamsParameterAchievementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\PrimitiveTypeUsage\AssignValueToPrimitiveType.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\PrimitiveTypeUsage\DeclareHexShorthandCharAchievementType.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\PrimitiveTypeUsage\DeclareEscapeCharTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\PrimitiveTypeUsage\LowerBoundAssignValueToPrimitiveType.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\PrimitiveTypeUsage\UpperBoundAssignValueToPrimitiveType.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\PrimitiveTypeUsage\MultipleDeclarePrimitiveTypeAsFieldTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\PrimitiveTypeUsage\MultipleDeclarePrimitiveTypeAsMethodVariableTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\PrimitiveTypeUsage\DeclareInitializePrimitiveTypeAsFieldTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\PrimitiveTypeUsage\DeclareInitializePrimitiveTypeAsMethodVariableTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\PrimitiveTypeUsage\DeclarePrimitiveTypeAsMethodVariableTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\PrimitiveTypeUsage\DeclarePrimitiveTypeAsFieldTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\NestedWhileLoopTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\IfShorthandTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\IfElseStatementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\ForeachWithEnumTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\ForeachTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\ForTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\EnumSwitchTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\ElseIfStatementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\DoWhileLoopTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\DefaultCaseInSwitchTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\DangerousEqualityTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\IfStatementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\NestedIfStatementTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\SwitchTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="TestCases\ProgramFlow\WhileLoopTest.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Strokes.BasicAchievements\Strokes.BasicAchievements.csproj">
      <Project>{5FFF3977-BDE0-4DC7-9B0F-D66ECD0C5AF8}</Project>
      <Name>Strokes.BasicAchievements</Name>
    </ProjectReference>
    <ProjectReference Include="..\Strokes.Core\Strokes.Core.csproj">
      <Project>{89159588-EFA4-431C-9128-3A564B53D1A4}</Project>
      <Name>Strokes.Core</Name>
    </ProjectReference>
    <ProjectReference Include="..\Strokes.Data\Strokes.Data.csproj">
      <Project>{798B2FC9-2538-4F93-9AF4-D7EA102C1CE7}</Project>
      <Name>Strokes.Data</Name>
    </ProjectReference>
    <ProjectReference Include="..\Strokes.FeatureAchievements\Strokes.FeatureAchievements.csproj">
      <Project>{F5176207-E4E3-4271-B121-71AF1A116515}</Project>
      <Name>Strokes.FeatureAchievements</Name>
    </ProjectReference>
    <ProjectReference Include="..\Strokes.Service\Strokes.Service.csproj">
      <Project>{6AC1A6EF-D271-46D2-803D-E9B149DE3816}</Project>
      <Name>Strokes.Service</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>